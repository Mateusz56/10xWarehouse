// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using _10xWarehouseNet.Db;

#nullable disable

namespace _10xWarehouseNet.Migrations
{
    [DbContext(typeof(WarehouseDbContext))]
    [Migration("20251015150614_AddStockMovementsMoveAddAndMoveSubtract")]
    partial class AddStockMovementsMoveAddAndMoveSubtract
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("app")
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("_10xWarehouseNet.Db.Models.Inventory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductTemplateId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("ProductTemplateId");

                    b.HasIndex("OrganizationId", "ProductTemplateId", "LocationId")
                        .IsUnique();

                    b.ToTable("Inventory", "app");
                });

            modelBuilder.Entity("_10xWarehouseNet.Db.Models.Invitation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("InvitedUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uuid");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Invitations", "app");
                });

            modelBuilder.Entity("_10xWarehouseNet.Db.Models.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("WarehouseId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Locations", "app");
                });

            modelBuilder.Entity("_10xWarehouseNet.Db.Models.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Organizations", "app");
                });

            modelBuilder.Entity("_10xWarehouseNet.Db.Models.OrganizationMember", b =>
                {
                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("OrganizationId", "UserId");

                    b.ToTable("OrganizationMembers", "app");
                });

            modelBuilder.Entity("_10xWarehouseNet.Db.Models.ProductTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Barcode")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<decimal?>("LowStockThreshold")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId", "Barcode")
                        .IsUnique();

                    b.ToTable("ProductTemplates", "app");
                });

            modelBuilder.Entity("_10xWarehouseNet.Db.Models.StockMovement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Delta")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("FromLocationId")
                        .HasColumnType("uuid");

                    b.Property<int>("MovementType")
                        .HasColumnType("integer");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductTemplateId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ToLocationId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("FromLocationId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("ProductTemplateId");

                    b.HasIndex("ToLocationId");

                    b.ToTable("StockMovements", "app");
                });

            modelBuilder.Entity("_10xWarehouseNet.Db.Models.Warehouse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Warehouses", "app");
                });

            modelBuilder.Entity("_10xWarehouseNet.Db.Models.Inventory", b =>
                {
                    b.HasOne("_10xWarehouseNet.Db.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_10xWarehouseNet.Db.Models.Organization", "Organization")
                        .WithMany("Inventories")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_10xWarehouseNet.Db.Models.ProductTemplate", "ProductTemplate")
                        .WithMany()
                        .HasForeignKey("ProductTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Organization");

                    b.Navigation("ProductTemplate");
                });

            modelBuilder.Entity("_10xWarehouseNet.Db.Models.Invitation", b =>
                {
                    b.HasOne("_10xWarehouseNet.Db.Models.Organization", "Organization")
                        .WithMany("Invitations")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("_10xWarehouseNet.Db.Models.Location", b =>
                {
                    b.HasOne("_10xWarehouseNet.Db.Models.Organization", "Organization")
                        .WithMany("Locations")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_10xWarehouseNet.Db.Models.Warehouse", "Warehouse")
                        .WithMany("Locations")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("_10xWarehouseNet.Db.Models.OrganizationMember", b =>
                {
                    b.HasOne("_10xWarehouseNet.Db.Models.Organization", "Organization")
                        .WithMany("Members")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("_10xWarehouseNet.Db.Models.ProductTemplate", b =>
                {
                    b.HasOne("_10xWarehouseNet.Db.Models.Organization", "Organization")
                        .WithMany("ProductTemplates")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("_10xWarehouseNet.Db.Models.StockMovement", b =>
                {
                    b.HasOne("_10xWarehouseNet.Db.Models.Location", "FromLocation")
                        .WithMany()
                        .HasForeignKey("FromLocationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("_10xWarehouseNet.Db.Models.Organization", "Organization")
                        .WithMany("StockMovements")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_10xWarehouseNet.Db.Models.ProductTemplate", "ProductTemplate")
                        .WithMany()
                        .HasForeignKey("ProductTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_10xWarehouseNet.Db.Models.Location", "ToLocation")
                        .WithMany()
                        .HasForeignKey("ToLocationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FromLocation");

                    b.Navigation("Organization");

                    b.Navigation("ProductTemplate");

                    b.Navigation("ToLocation");
                });

            modelBuilder.Entity("_10xWarehouseNet.Db.Models.Warehouse", b =>
                {
                    b.HasOne("_10xWarehouseNet.Db.Models.Organization", "Organization")
                        .WithMany("Warehouses")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("_10xWarehouseNet.Db.Models.Organization", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("Invitations");

                    b.Navigation("Locations");

                    b.Navigation("Members");

                    b.Navigation("ProductTemplates");

                    b.Navigation("StockMovements");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("_10xWarehouseNet.Db.Models.Warehouse", b =>
                {
                    b.Navigation("Locations");
                });
#pragma warning restore 612, 618
        }
    }
}
