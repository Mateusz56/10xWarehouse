name: E2E

on:
  workflow_dispatch:

jobs:
  e2e:
    runs-on: ubuntu-latest
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      PUBLIC_API_BASE_URL: http://localhost:8080/api
      PLAYWRIGHT_BACKEND_URL: http://localhost:8080/api
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install frontend deps
        working-directory: 10xWarehouseAstro/astro-app
        run: npm ci

      - name: Install Playwright (Chromium)
        working-directory: 10xWarehouseAstro/astro-app
        run: npx playwright install --with-deps chromium

      - name: Start backend and database (docker-compose)
        run: docker compose -f docker-compose.e2e.yml up -d postgres backend

      - name: Wait for backend
        run: |
          echo "Waiting for backend to be ready..."
          for i in {1..60}; do
            # Check the health endpoint
            if curl -f -s http://localhost:8080/api/up | grep -q '"status":"up"'; then
              echo "Backend is up and ready"
              break
            fi
            echo "Attempt $i/60: Backend not ready yet..."
            sleep 2
          done

      - name: Run E2E
        working-directory: 10xWarehouseAstro/astro-app
        env:
          CI: true
        run: npm run test:e2e -- --reporter=line
