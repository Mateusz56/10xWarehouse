name: Unit Tests

on:
  workflow_dispatch:

jobs:
  backend-unit-tests:
    name: Backend Unit Tests (.NET)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore -c Release

      - name: Run unit tests with coverage
        working-directory: 10xWarehouseNet.Tests
        run: |
          dotnet test \
            --no-build \
            --configuration Release \
            --collect:"XPlat Code Coverage" \
            --results-directory:./TestResults \
            --logger "trx;LogFileName=test-results.trx" \
            --logger "console;verbosity=detailed" \
            -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura,json,lcov

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: backend-test-results
          path: 10xWarehouseNet.Tests/TestResults/**/*
          retention-days: 30

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          files: 10xWarehouseNet.Tests/TestResults/**/coverage.cobertura.xml
          flags: backend
          name: backend-coverage
          fail_ci_if_error: false

  frontend-unit-tests:
    name: Frontend Unit Tests (Vitest)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: 10xWarehouseAstro/astro-app/package-lock.json

      - name: Install dependencies
        working-directory: 10xWarehouseAstro/astro-app
        run: npm ci

      - name: Run unit tests with coverage
        working-directory: 10xWarehouseAstro/astro-app
        env:
          CI: true
        run: npm run test:coverage -- --reporter=verbose --run

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: frontend-test-results
          path: 10xWarehouseAstro/astro-app/coverage/**
          retention-days: 30

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          files: 10xWarehouseAstro/astro-app/coverage/lcov.info
          flags: frontend
          name: frontend-coverage
          fail_ci_if_error: false

  coverage-summary:
    name: Coverage Summary
    needs: [backend-unit-tests, frontend-unit-tests]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/checkout@v4

      - name: Download backend coverage
        uses: actions/download-artifact@v4
        with:
          name: backend-test-results
          path: backend-coverage

      - name: Download frontend coverage
        uses: actions/download-artifact@v4
        with:
          name: frontend-test-results
          path: frontend-coverage

      - name: Display coverage summary
        run: |
          echo "## Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Backend Coverage" >> $GITHUB_STEP_SUMMARY
          if find backend-coverage -name "coverage.cobertura.xml" -type f | head -1 | grep -q .; then
            echo "✅ Coverage report available. Check artifacts for details." >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ No coverage report found." >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Frontend Coverage" >> $GITHUB_STEP_SUMMARY
          if [ -f "frontend-coverage/coverage/lcov.info" ]; then
            echo "✅ Coverage report available. Check artifacts for details." >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ No coverage report found." >> $GITHUB_STEP_SUMMARY
          fi

