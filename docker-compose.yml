services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 10

  backend:
    build:
      context: .
      dockerfile: 10xWarehouseNet/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ConnectionStrings__DefaultConnection: Host=postgres;Port=5432;Database=postgres;Username=postgres;Password=postgres
      Supabase__Url: ${SUPABASE_URL}
      Supabase__ServiceRoleKey: ${SUPABASE_SERVICE_ROLE_KEY}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"

  frontend:
    build:
      context: .
      dockerfile: 10xWarehouseAstro/astro-app/Dockerfile
      args:
        PUBLIC_API_BASE_URL: http://localhost:8080/api
    environment:
      PUBLIC_SUPABASE_URL: ${SUPABASE_URL}
      PUBLIC_SUPABASE_ANON_KEY: ${SUPABASE_SERVICE_ROLE_KEY}
    depends_on:
      - backend
    ports:
      - "4321:4321"

volumes:
  pgdata: